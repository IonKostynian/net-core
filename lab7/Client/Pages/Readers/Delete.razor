@page "/reader/delete/{id:int}"
@using lab7.Client.Pages.Readers
@inject IReaderServices readerService
@inject NavigationManager navigationManager
<h1>Delete reader</h1>
<EditForm Model="reader" OnSubmit="DeleteReader">
	<InputNumber @bind-Value="reader.Id" hidden />
	<div class="form-group row">
	  <label>Person</label>
	  <div class="col-sm-10">
		<InputText @bind-Value="reader.Person.Name" disabled />
	  </div>
  </div>
  <div class="form-group row">
		<label>Book</label>
		<div class="col-sm-10">
			<InputText @bind-Value="reader.Book.Name" disabled />
		</div>
  </div>
   <div class="form-group row">
		<label>Date of issue</label>
		<div class="col-sm-10">
			<InputDate @bind-Value="reader.IssueDate" disabled />
		</div>
  </div>
  <div class="form-group row">
		<label>Date return</label>
		<div class="col-sm-10">
			<InputDate @bind-Value="reader.ReturnDate" disabled />
		</div>
  </div>
  <div class="col-sm-10 pt-2">
	  <button type="submit">Delete reader</button>
  </div>
</EditForm>
@code {
	[Parameter]
	public int? Id { get; set; }
	Reader reader = new Reader();

	protected override async Task OnParametersSetAsync()
	{
		if(Id != null)
		{
			reader = await readerService.GetReader((int)Id);
		}
	}
	public async Task DeleteReader()
	{
		await readerService.Delete(reader.Id);
		navigationManager.NavigateTo("/readers");
	}
}
